/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lgengui03;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
//import static lgengui03.LottoGen.intArrToString;

/**
 *
 * @author jrom8
 */
public class lGenGUI03 extends javax.swing.JFrame {

    /**
     * Creates new form lGenGUI03
     */
    public lGenGUI03() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        mcnButtonGroup = new javax.swing.ButtonGroup();
        lottoLabel = new javax.swing.JLabel();
        save1 = new javax.swing.JRadioButton();
        lotto1 = new javax.swing.JTextField();
        save2 = new javax.swing.JRadioButton();
        lotto2 = new javax.swing.JTextField();
        save3 = new javax.swing.JRadioButton();
        lotto3 = new javax.swing.JTextField();
        save4 = new javax.swing.JRadioButton();
        lotto4 = new javax.swing.JTextField();
        save5 = new javax.swing.JRadioButton();
        lotto5 = new javax.swing.JTextField();
        save6 = new javax.swing.JRadioButton();
        lotto6 = new javax.swing.JTextField();
        save7 = new javax.swing.JRadioButton();
        lotto7 = new javax.swing.JTextField();
        save8 = new javax.swing.JRadioButton();
        lotto8 = new javax.swing.JTextField();
        save9 = new javax.swing.JRadioButton();
        lotto9 = new javax.swing.JTextField();
        save10 = new javax.swing.JRadioButton();
        lotto10 = new javax.swing.JTextField();
        ma1 = new javax.swing.JLabel();
        ma2 = new javax.swing.JLabel();
        ma3 = new javax.swing.JLabel();
        ma4 = new javax.swing.JLabel();
        ma5 = new javax.swing.JLabel();
        ma6 = new javax.swing.JLabel();
        ma7 = new javax.swing.JLabel();
        ma8 = new javax.swing.JLabel();
        ma9 = new javax.swing.JLabel();
        ma10 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        mcnNum = new javax.swing.JTextField();
        drawNum = new javax.swing.JTextField();
        mcnNumLabel = new javax.swing.JLabel();
        drawNumLabel = new javax.swing.JLabel();
        mcnLow = new javax.swing.JRadioButton();
        mcnMed = new javax.swing.JRadioButton();
        mcnHigh = new javax.swing.JRadioButton();
        numLoopMCN = new javax.swing.JTextField();
        numLoopMCNLabel = new javax.swing.JLabel();
        ballsDrawn = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        loopButton = new javax.swing.JButton();
        numTestLoops = new javax.swing.JTextField();
        testLoopLabel = new javax.swing.JLabel();
        loopMultiplier = new javax.swing.JTextField();
        loopMultLabel = new javax.swing.JLabel();
        sixWinners = new javax.swing.JLabel();
        sixWinnersLabel = new javax.swing.JLabel();
        winLoop1 = new javax.swing.JLabel();
        winLoop2 = new javax.swing.JLabel();
        winLoop3 = new javax.swing.JLabel();
        winLoop4 = new javax.swing.JLabel();
        winLoop5 = new javax.swing.JLabel();
        winLoop6 = new javax.swing.JLabel();
        winLoop7 = new javax.swing.JLabel();
        winLoop8 = new javax.swing.JLabel();
        winLoop9 = new javax.swing.JLabel();
        winLoop10 = new javax.swing.JLabel();
        loopCounter = new javax.swing.JLabel();
        loopCounterLabel = new javax.swing.JLabel();
        genNumsButton = new javax.swing.JButton();
        mcn1 = new javax.swing.JLabel();
        mcn2 = new javax.swing.JLabel();
        mcn3 = new javax.swing.JLabel();
        mcn4 = new javax.swing.JLabel();
        mcn5 = new javax.swing.JLabel();
        mcn6 = new javax.swing.JLabel();
        mcn7 = new javax.swing.JLabel();
        mcn8 = new javax.swing.JLabel();
        mcn9 = new javax.swing.JLabel();
        mcn10 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lottoLabel.setText("LottoGen3");

        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });

        save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save2ActionPerformed(evt);
            }
        });

        save3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save3ActionPerformed(evt);
            }
        });

        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });

        save5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save5ActionPerformed(evt);
            }
        });

        save6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save6ActionPerformed(evt);
            }
        });

        lotto6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lotto6ActionPerformed(evt);
            }
        });

        save7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save7ActionPerformed(evt);
            }
        });

        save8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save8ActionPerformed(evt);
            }
        });

        save9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save9ActionPerformed(evt);
            }
        });

        save10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save10ActionPerformed(evt);
            }
        });

        ma1.setText("0,0,0,0");

        ma2.setText("0,0,0,0");

        ma3.setText("0,0,0,0");

        ma4.setText("0,0,0,0");

        ma5.setText("0,0,0,0");

        ma6.setText("0,0,0,0");

        ma7.setText("0,0,0,0");

        ma8.setText("0,0,0,0");

        ma9.setText("0,0,0,0");

        ma10.setText("0,0,0,0");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        mcnNum.setText("0");

        drawNum.setText("1");

        mcnNumLabel.setText("Number of MCNs");

        drawNumLabel.setText("Number of Tickets");

        mcnButtonGroup.add(mcnLow);
        mcnLow.setText("MCN Low");
        mcnLow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcnLowActionPerformed(evt);
            }
        });

        mcnButtonGroup.add(mcnMed);
        mcnMed.setText("MCN Med");
        mcnMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcnMedActionPerformed(evt);
            }
        });

        mcnButtonGroup.add(mcnHigh);
        mcnHigh.setText("MCN High");
        mcnHigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcnHighActionPerformed(evt);
            }
        });

        numLoopMCN.setText("0");

        numLoopMCNLabel.setText("Loop MCN");

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        loopButton.setText("Loop");
        loopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopButtonActionPerformed(evt);
            }
        });

        numTestLoops.setText("1");

        testLoopLabel.setText("Test Loops");

        loopMultiplier.setText("1");

        loopMultLabel.setText("Loop Multiplier");

        sixWinners.setText("0");

        sixWinnersLabel.setText("6 Nums Won");

        winLoop1.setText("0");

        winLoop2.setText("0");

        winLoop3.setText("0");

        winLoop4.setText("0");

        winLoop5.setText("0");

        winLoop6.setText("0");

        winLoop7.setText("0");

        winLoop8.setText("0");

        winLoop9.setText("0");

        winLoop10.setText("0");

        loopCounter.setText("0");

        loopCounterLabel.setText("Loop Counter");

        genNumsButton.setText("Generate");
        genNumsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genNumsButtonActionPerformed(evt);
            }
        });

        mcn1.setText("0");

        mcn2.setText("0");

        mcn3.setText("0");

        mcn4.setText("0");

        mcn5.setText("0");

        mcn6.setText("0");

        mcn7.setText("0");

        mcn8.setText("0");

        mcn9.setText("0");

        mcn10.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(saveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(resetButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(mcnLow))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(drawNum, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                    .addComponent(mcnNum))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mcnNumLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(drawNumLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mcnMed)
                                .addGap(18, 18, 18)
                                .addComponent(mcnHigh))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(save10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(save1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lotto9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(lotto8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto6, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lotto10)))
                            .addComponent(lottoLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genNumsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ballsDrawn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(mcn6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                                            .addComponent(mcn1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mcn2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mcn3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mcn4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mcn5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mcn7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(34, 34, 34))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mcn8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mcn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mcn10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ma1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(ma2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ma10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(winLoop2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(winLoop10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sixWinners, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sixWinnersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(loopMultiplier, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(loopMultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(loopButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(loopCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(loopCounterLabel)
                                        .addGap(17, 17, 17))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(numTestLoops, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(numLoopMCN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(numLoopMCNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(testLoopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lottoLabel)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(clearButton)
                                    .addComponent(ballsDrawn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(genNumsButton, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(save1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lotto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(winLoop1)
                                            .addComponent(loopCounterLabel)
                                            .addComponent(loopCounter)
                                            .addComponent(loopButton)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ma1, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(mcn1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(save2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lotto2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(numLoopMCNLabel)
                                            .addComponent(ma2)
                                            .addComponent(mcn2)))
                                    .addComponent(numLoopMCN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(winLoop2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(save3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lotto3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ma3)
                                            .addComponent(testLoopLabel)
                                            .addComponent(mcn3)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(numTestLoops, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(winLoop3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(save4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lotto4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ma4)
                                        .addComponent(loopMultLabel)
                                        .addComponent(mcn4))
                                    .addComponent(winLoop4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(loopMultiplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(save5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lotto5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sixWinnersLabel)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sixWinners, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(winLoop5)
                                .addComponent(ma5)
                                .addComponent(mcn5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(save6)
                            .addComponent(lotto6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(mcn6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(ma6)
                                        .addComponent(winLoop6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(save7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lotto7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ma7)
                                .addComponent(winLoop7)
                                .addComponent(mcn7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(save8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lotto8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ma8)
                                .addComponent(winLoop8)
                                .addComponent(mcn8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(save9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lotto9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(winLoop9))
                            .addComponent(ma9)))
                    .addComponent(mcn9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(save10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lotto10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ma10)
                        .addComponent(winLoop10)
                        .addComponent(mcn10)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(mcnNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mcnNumLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(drawNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drawNumLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mcnLow)
                    .addComponent(mcnMed)
                    .addComponent(mcnHigh)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
////////// Variable Declarations //////////
    private int[] array;        // merge sort variable
    private int[] tempMergArr;  // merge sort variable
    private int len;            // merge sort variable 
    private boolean saveFlag1=false,saveFlag2=false,saveFlag3=false,
            saveFlag4=false,saveFlag5=false,saveFlag6=false,saveFlag7=false,
            saveFlag8=false,saveFlag9=false,saveFlag10=false;    
    static int startCounter = 0;
    static int sixCount  = 0;
    static int loopCntr = 0;
    static int fineLoopCounter = 0;
    static int vlcntrTemp = 0;  
    static String loopStatusInit = "Loop Status";  
    static String loopRunning = "Loop Running";  
    static String loopEnded = "End of Loop";  
    static String loopStatusNull = "";
    //final String fileName = "f:/_Java_Swing/Swing/lGenGUI03/lottoArrays10.5.17.txt";
    //final String fileName = "f:/_Java_Swing/Swing/lGenGUI03/lottoArrays10.8.17.txt";
    final static String fileName = "f:/_Java_Swing/Swing/lGenGUI03/lottoArraysTest1.txt";
    //int[] intArr;
    boolean matchFlag;
    //int num6;
    int lineCounter;
    public static boolean compareFlag;
    public static List listA = new ArrayList();
    
    ////////////// MCN Arrays ////////////////
    static int[] mcnNull        = {};
    static int[] allNull        = {};
// >8
    static int[] mcnLLow	= {2,3,4,7,11,13,16,17,20,21,22,23,26,27,
                                    33,34,35,38,39,41}; 
// >9
    static int[] mcnLMed	= {2,5,7,8,11,13,14,15,16,17,19,20,21,22,24,28,
                                   30,33,34,35,37,38,39,41,42};
// >10
    static int[] mcnLHigh	= {2,7,8,13,14,16,24,28,34,38,39,41,42};
/////////// End of MCN Arrays /////////////
    
////////// End of Variable Declarations ////////// 
    
//////////////// Methods //////////////////
// Converts a string to an int array   
    public int[] strToIntArr (String s)    
    {
        String arr = s;
        String[] items = arr.replaceAll("\\[", "").replaceAll("\\]", "").replaceAll("\\s", "").split(",");
        int[] results = new int[items.length];
        int itemsLen = items.length;
        int r;
        for (r = 0; r < itemsLen; r++) {
            try {
                results[r] = Integer.parseInt(items[r]);
            } catch (NumberFormatException nfe) {
               //System.out.println("Numbers only, Dumbass!!");
               results[r] = 0;
    //NOTE: write something here if you need to recover from formatting errors
            };
        }
        return results;
    }

    public int compareStr(String pbDrawn, String ticket)
    {
        int[] lm = strToIntArr(ticket);
        int[] lt = strToIntArr(pbDrawn);
        int ltLen = lt.length;
        int count=0;
        int x, y;
        for(x=0; x<ltLen; x++)
        {
            for (y=0; y<ltLen; y++)
            {
                if (lm[x] == lt[y])
                {
                    count++;
                }
            }
        }
        return count;
    }    
// Converts an int array to a string    
    public static String intArrToStr(int[] num) 
    {
        String w = Arrays.toString(num); 
        return w;
    }

// This returns a String of 6 non-repeating pseudorandom lotto ball numbers
    public String lGenRand ()
    {
        LottoGen.setVllimit(Integer.parseInt(mcnNum.getText()));
        int [] inputArrPB = LottoGen.getRandomValues(6); // Key value
        vlcntrTemp = LottoGen.getVlcntr();        
        insertionSort(inputArrPB);
        return intArrToStr(inputArrPB);
    }
/////////////////// Sorts //////////////////
/////////////// Insertion Sort /////////////

public static int[] insertionSort(int[] ar) {
        int n = ar.length;
        int i;
        for (i = 1; i < n; i++) {
            int index = ar[i];
            int j = i;
            while(j > 0 && ar[j-1] > index) {
                ar[j] = ar[j-1];
                j--;
            }
            ar[j] = index;
        }
        return ar;
    }

    ////////// Set Up Routines //////////
// Keeps the user from making mistakes and clears data buffers, 
// used in genNumsButtonAction.    
    public void setUpRoutine() 
    {
        mcnButtonGroup.add(mcnLow);
        mcnButtonGroup.add(mcnMed);
        mcnButtonGroup.add(mcnHigh);     
        if (!mcnLow.isSelected() && !mcnMed.isSelected() && !mcnHigh.isSelected()) 
        {   
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLLow);
            mcnLow.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 6)
            {
                mcnNum.setText("6");
            }
        }
        else if (mcnLow.isSelected())
        {
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLLow);
            mcnLow.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 6)
            {
                mcnNum.setText("6");
            }
        }
        
        else if (mcnMed.isSelected())
        {
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLMed);
            mcnMed.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 6)
            {
                mcnNum.setText("6");
            }
        }
        
        else if (mcnHigh.isSelected())
        {
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLHigh);
            mcnHigh.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 4)
            {
                mcnNum.setText("4");
            }
        }        
        
        if (Integer.parseInt(mcnNum.getText()) >= 6)
        {
            mcnNum.setText("6");
        }
        if (Integer.parseInt(drawNum.getText()) >= 10)
        {
            drawNum.setText("10");
        }
    }    
    
// Keeps the user from making mistakes, used in loopButtonAction
// and clearButtonAction    
    public void setUpWOClear()
    { 
        //loopStatus.setText(loopStatusNull);
        mcnButtonGroup.add(mcnLow);
        mcnButtonGroup.add(mcnMed);
        mcnButtonGroup.add(mcnHigh);     
        if (!mcnLow.isSelected() && !mcnMed.isSelected() && !mcnHigh.isSelected()) 
        {   
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLLow);
            mcnLow.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 6)
            {
                mcnNum.setText("6");
            }
        }
        else if (mcnLow.isSelected())
        {
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLLow);
            mcnLow.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 6)
            {
                mcnNum.setText("6");
            }
        }
        
        else if (mcnMed.isSelected())
        {
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLMed);
            mcnMed.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 6)
            {
                mcnNum.setText("6");
            }
        }
        
        else if (mcnHigh.isSelected())
        {
            LottoGen.setMCN(mcnNull);// Clear the buffer
            LottoGen.setMCN(mcnLHigh);
            mcnHigh.setSelected(true);
            if (Integer.parseInt(mcnNum.getText()) >= 4)
            {
                mcnNum.setText("4");
            }
        }        
        
        if (Integer.parseInt(mcnNum.getText()) >= 6)
        {
            mcnNum.setText("6");
        }
        if (Integer.parseInt(drawNum.getText()) >= 10)
        {
            drawNum.setText("10");
        }
    }    

////////// End of Set Up Routines //////////
///////////// Count Methods ///////////////    
    public void countAllWinners(int u, int n){
        if (u >= 6){
            sixCount++;
            sixWinners.setText(Integer.toString(sixCount));
            switch (n) 
                {
                    case 1:
                        winLoop1.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 2:                        
                        winLoop2.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 3:
                        winLoop3.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 4:
                        winLoop4.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 5:
                        winLoop5.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 6:
                        winLoop6.setText(Integer.toString(fineLoopCounter));
                    case 7:
                        winLoop7.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 8:
                        winLoop8.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 9:
                        winLoop9.setText(Integer.toString(fineLoopCounter));
                        break;
                    case 10:
                        winLoop10.setText(Integer.toString(fineLoopCounter));
                        break;
                    default:
                        break;
                }
        }
    }
    
    public String countHighWinners(String t, int u){
        int[] intArr = strToIntArr(t);
        if      (u == 3) intArr[0]++;
        else if (u == 4) intArr[1]++;
        else if (u == 5) intArr[2]++;
        else if (u >= 6) intArr[3]++;
        String result = Integer.toString(intArr[0])+ ","+
                Integer.toString(intArr[1])+","+
                Integer.toString(intArr[2])+","+
                Integer.toString(intArr[3]);
        return result;
    }
// Keeps track of total winners for a given array    
    public String countMatches (String tm, String txtBox){
        int tb = Integer.parseInt(txtBox);
        String result;
        if (Integer.parseInt(tm)>=3) tb++;
        result = Integer.toString(tb);
        return result;
    }
///////////// End of Count Methods ///////////////        
/////////////// Clear Methods ///////////   
     public void clearStuff()
     {
        String n = "";
        lotto1.setText(n);
        lotto2.setText(n);
        lotto3.setText(n);
        lotto4.setText(n);
        lotto5.setText(n);
        lotto6.setText(n);
        lotto7.setText(n);
        lotto8.setText(n);
        lotto9.setText(n);
        lotto10.setText(n);
     }
     
     public void checkBeforeClear()
     {
        String p = "0,0,0,0";
        String q = "0";
        if (!saveFlag1){
            ma1.setText(p);
            winLoop1.setText(q);
        }
        if (!saveFlag2){
            ma2.setText(p);
            mcn1.setText(q);
            winLoop2.setText(q);
        }
        if (!saveFlag3){
            ma3.setText(p);
            mcn3.setText(q);
            winLoop3.setText(q);
        }
        if (!saveFlag4){
            ma4.setText(p);
            mcn4.setText(q);
            winLoop4.setText(q);
        }
        if (!saveFlag5){
            ma5.setText(p);
            mcn5.setText(q);
            winLoop5.setText(q);
        }
        if (!saveFlag6){
            ma6.setText(p);
            mcn6.setText(q);
            winLoop6.setText(q);
        }
        if (!saveFlag7){
            ma7.setText(p);
            mcn7.setText(q);
            winLoop7.setText(q);
        }
        if (!saveFlag8){
            ma8.setText(p);
            mcn8.setText(q);
            winLoop8.setText(q);
        }
        if (!saveFlag9){
            ma9.setText(p);
            mcn9.setText(q);
            winLoop9.setText(q);
        }
        if (!saveFlag10){
            ma10.setText(p);
            mcn10.setText(q);
            winLoop10.setText(q);
        }         
     }
         
    public void clrLoop(){
        loopCounter.setText("");
        loopCounter.setText("0");
        loopCntr = 0;
        sixWinners.setText("0");
        sixCount = 0;
    }    
   
    // This clears the numWinners and numDollars text boxes    
         
    public void clrMatchLabels(){
        String n = "0,0,0,0";
        ma1.setText(n);
        ma2.setText(n);
        ma3.setText(n);
        ma4.setText(n);
        ma5.setText(n);
        ma6.setText(n);
        ma7.setText(n);
        ma8.setText(n);
        ma9.setText(n);
        ma10.setText(n);
    }
    
    public void clearSaveFlags(){        
        save1.setSelected(false);
        saveFlag1 = false;
        save2.setSelected(false);
        saveFlag2 = false;
        save3.setSelected(false);
        saveFlag3 = false;
        save4.setSelected(false);
        saveFlag4 = false;
        save5.setSelected(false);
        saveFlag5 = false;
        save6.setSelected(false);
        saveFlag6 = false;
        save7.setSelected(false);
        saveFlag7 = false;
        save8.setSelected(false);
        saveFlag8 = false;
        save9.setSelected(false);
        saveFlag9 = false;
        save10.setSelected(false);
        saveFlag10 = false;
    }   
//////////// End of Clear Methods //////////
//////////////// File Handling Methods ////////////////

    
    public static String intToString(int num) 
        {
            String w = Integer.toString(num);
            return w;
        }
    
    public static int stringToInt(String w)
        {
            int num = Integer.parseInt(w);
            return num;
        }
    
    public boolean compareLottoStrings (String m, String n) { // Not tested!!
        boolean result = false; 
        for (int i = 0; i < 6; i++) {
            if (compareStr(m, n) == 6) result = true;
            else result = false;
        }
        return result;
    }
    
    public boolean compareLottoArrays (int[] m, int[] n) {
        boolean result; 
        String strM = intArrToStr(m);
        String strN = intArrToStr(n);
        if (compareStr(strM, strN) == 6) result = true;
        else result = false;
        return result;
    }
    
    public void writeToLottoArr (String w) throws IOException {        
        FileOutputStream fos;
        FileReader fr = null;
        BufferedReader br = null;
        String line;
        //String[] allLines = null;
        try {
            fos = new FileOutputStream(fileName, true);
            fr = new FileReader(fileName);
            br = new BufferedReader(fr);
            //String strList = ParseFileAndCompareLines(w);
            fos.write(w.getBytes()); 
            fos.flush();

            while ((line = br.readLine()) != null){
                System.out.println(line);
            }
        }catch(IOException e) {            
        }finally{
            try {
                if(br != null) br.close();
                if (fr != null) fr.close();
            }catch(IOException ex){
                
            }
        }
        //return allLines;
    }
    public String readLottoArr () throws FileNotFoundException, IOException {
        FileReader fr;
        BufferedReader br;
        fr = new FileReader(fileName);
        br = new BufferedReader(fr);
        String w = br.readLine();
        while(w != null) {
            System.out.println(w);
        }
        return w;
    }    
     public int[] addElements(int[] a, int b, int c) {
        a = Arrays.copyOf(a, a.length + 2);
        a[a.length - 2] = b;
        a[a.length - 1] = c;
        return a;
    }
     
     public String addWinsToSavedArray(int[] a, int b) {
        String s;
        a = Arrays.copyOf(a, a.length);
        a[a.length - 2] += b;
        s = intArrToStr(a);
        return s;
    }
    ////////////// appendLottoArray //////////////
     // t is the 6-number lotto array you are saving to the list, 
     // u is the 4-number array ma1...ma10, the 4th number of which
     // is the total number of times the array has hit 6 numbers, and
     // v is the MCN number of the array. 
     // This returns the String to be stored in "final String fileName" 
     // and contains 8 array tems: the lotto array (6 items), 
     // how many times it has hit 6 numbers (1 item), and 
     // its MCN Number (1 item).
     // Only use if compared strings are not a match.
    public String appendLottoArray(String t, String u, String v){
        int[] intArr = strToIntArr(t);
        int[] ia = strToIntArr(u);
        int num6 = ia[3];
        int numMCN = stringToInt(v);
        int i;
        int len = intArr.length;
        int[] tempArr = new int[len];
                      
        for (i=0; i < len; i++) {        
            tempArr[i] = intArr[i]; 
         }
        int[] temp = addElements(tempArr, num6, numMCN);
        String result = intArrToStr(temp);
        return result;
    }  
////////////// Construction Zone //////////////

    public static List<String> getTextFileByLines (String fn) throws IOException {
        List<String> lines = Files.readAllLines(Paths.get(fn));
        return lines;
    }	

    public static String[] iterateTextFile (String s) throws IOException {
        listA = getTextFileByLines(fileName);
        compareFlag = false;
        String str;
        String[] strArr = new String[100];
        ArrayList t = new ArrayList();
        int i = 0;
        Iterator<String> iterator = listA.iterator();
        while(iterator.hasNext()){
            str = iterator.next();
            t.add(str);
            if (s.equals(str)) {
                compareFlag = true;
                System.out.println("Equal");    
                System.out.println(str + "\n"); 
            }else {
                i++;
                strArr[i] = str;
                t.add(str);
                System.out.println("Not equal");    
                System.out.println(str + "\n");
            }
        }
        return strArr;
}

    
//Compares a lotto array (str) to see if it is already stored in 
// the file "lottoArrays.txt" 
    
    public String compareLines(String str) throws IOException {        
        FileReader fr = new FileReader(fileName);
        compareFlag = false;
        BufferedReader textReader = new BufferedReader(fr);
        String textData = new String();
        //StringBuilder sb = new StringBuilder();
        String line = textReader.readLine();
       
        try {
            while(line != null) {
                lineCounter++;
                if (compareLottoStrings(line, str) == false){
                    compareFlag = false;
                    textData = line;
                }
                else {
                    compareFlag = true;
                    textData = null;
                }
            }
        }catch (Exception e){
            
        }
        return textData;
    }     

    
    //String delims = "[ .,?!]+";
    //String[] tokens = str.split(delims);

 ///////////// End of File Methods ////////////// 
       ////////// End Methods ///////////
    
    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        save1.setSelected(true);
        saveFlag1 = true; 
    }//GEN-LAST:event_save1ActionPerformed

    private void lotto6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lotto6ActionPerformed
        
    }//GEN-LAST:event_lotto6ActionPerformed

    private void save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save2ActionPerformed
        save2.setSelected(true);
        saveFlag2 = true;
    }//GEN-LAST:event_save2ActionPerformed

    private void save3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save3ActionPerformed
        save3.setSelected(true);
        saveFlag3 = true;
    }//GEN-LAST:event_save3ActionPerformed

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed
        save4.setSelected(true);
        saveFlag4 = true;
    }//GEN-LAST:event_save4ActionPerformed

    private void save5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save5ActionPerformed
        save5.setSelected(true);
        saveFlag5 = true;
    }//GEN-LAST:event_save5ActionPerformed

    private void save6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save6ActionPerformed
        save6.setSelected(true);
        saveFlag6 = true;
    }//GEN-LAST:event_save6ActionPerformed

    private void save7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save7ActionPerformed
        save7.setSelected(true);
        saveFlag7 = true;
    }//GEN-LAST:event_save7ActionPerformed

    private void save8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save8ActionPerformed
        save8.setSelected(true);
        saveFlag8 = true;
    }//GEN-LAST:event_save8ActionPerformed

    private void save9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save9ActionPerformed
        save9.setSelected(true);
        saveFlag9 = true;
    }//GEN-LAST:event_save9ActionPerformed

    private void save10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save10ActionPerformed
        save10.setSelected(true);
        saveFlag10 = true;
    }//GEN-LAST:event_save10ActionPerformed

    private void mcnLowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcnLowActionPerformed
        LottoGen.setMCN(mcnNull);// Clear the buffer
        LottoGen.setMCN(mcnLLow);
        mcnLow.setSelected(true);
        if (Integer.parseInt(mcnNum.getText()) >= 6) mcnNum.setText("6");
    }//GEN-LAST:event_mcnLowActionPerformed

    private void mcnMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcnMedActionPerformed
        LottoGen.setMCN(mcnNull);// Clear the buffer
        LottoGen.setMCN(mcnLMed);
        mcnMed.setSelected(true);
        if (Integer.parseInt(mcnNum.getText()) >= 6) mcnNum.setText("6");
    }//GEN-LAST:event_mcnMedActionPerformed

    private void mcnHighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcnHighActionPerformed
        LottoGen.setMCN(mcnNull);// Clear the buffer
        LottoGen.setMCN(mcnLHigh);
        mcnHigh.setSelected(true);
        if (Integer.parseInt(mcnNum.getText()) >= 4) mcnNum.setText("4");
    }//GEN-LAST:event_mcnHighActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        save1.setSelected(false);
        saveFlag1 = false;
        save2.setSelected(false);
        saveFlag2 = false;
        save3.setSelected(false);
        saveFlag3 = false;
        save4.setSelected(false);
        saveFlag4 = false;
        save5.setSelected(false);
        saveFlag5 = false;
        save6.setSelected(false);
        saveFlag6 = false;
        save7.setSelected(false);
        saveFlag7 = false;
        save8.setSelected(false);
        saveFlag8 = false;
        save9.setSelected(false);
        saveFlag9 = false;
        save10.setSelected(false);
        saveFlag10 = false;                    

    }//GEN-LAST:event_resetButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        if(saveFlag1){
         try {
             String it = appendLottoArray(lotto1.getText(), 
                     ma1.getText(), mcn1.getText());
             writeToLottoArr(it+" \n");//, ma1.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag2){
         try {
             String it = appendLottoArray(lotto2.getText(), 
                     ma2.getText(), mcn2.getText());
             writeToLottoArr(it+" \n");//, ma2.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag3){
         try {
             String it = appendLottoArray(lotto3.getText(), ma3.getText(), mcn3.getText());
             writeToLottoArr(it+" \n");//, ma3.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag4){
         try {
             String it = appendLottoArray(lotto4.getText(), ma4.getText(), mcn4.getText());
             writeToLottoArr(it+" \n");
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag5){
         try {
             String it = appendLottoArray(lotto5.getText(), ma5.getText(), mcn5.getText());
             writeToLottoArr(it+" \n");//, ma5.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag6){
         try {
             String it = appendLottoArray(lotto6.getText(), ma6.getText(), mcn6.getText());
             writeToLottoArr(it+" \n");
         }catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag7){
         try {
             String it = appendLottoArray(lotto7.getText(), ma7.getText(), mcn7.getText());
             writeToLottoArr(it+" \n");//, ma7.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag8){
         try {             
             String it = appendLottoArray(lotto8.getText(), ma8.getText(), mcn8.getText());
             writeToLottoArr(it+" \n");//, ma8.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag9){
         try {
             String it = appendLottoArray(lotto9.getText(), ma9.getText(), mcn9.getText());
             writeToLottoArr(it+" \n");;//, ma9.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        if(saveFlag10){
         try {
             String it = appendLottoArray(lotto10.getText(), ma10.getText(), mcn10.getText());
             writeToLottoArr(it+" \n");//, ma10.getText()));
         } catch (IOException ex) {
             Logger.getLogger(lGenGUI03.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopButtonActionPerformed
        setUpWOClear();
        //loopStatus.setText(loopStatusNull);
        ballsDrawn.setText("");
        int testCount = Integer.parseInt(numTestLoops.getText()); 
        int mult = Integer.parseInt(loopMultiplier.getText());
        int tw, i;
        int loopMCN_num = Integer.parseInt(numLoopMCN.getText());
        loopCntr++;
        System.out.print("\nStarting loop\n");
        //loopStatus.setText(loopRunning);
        //loopCounter.setText(Integer.toString(loopCntr)); 
        for(tw=0; tw<mult; tw++){
            for (i=0; i<testCount; i++) {
                fineLoopCounter++;
                LottoGen.setVllimit(loopMCN_num);// 0 = completely pseudorandom generation
                int [] inputArrTL = LottoGen.getRandomValues(6); // Key value
                insertionSort(inputArrTL);
                ballsDrawn.setText(intArrToStr(inputArrTL));
                String temp1 = ballsDrawn.getText();
                ////////////////////
                int aa1 = compareStr(lotto1.getText(), temp1);
                int a1 = 1;
                countAllWinners(aa1, a1);
                ma1.setText(countHighWinners(ma1.getText(),aa1));
                ////////////////////
                int bb1 = compareStr(lotto2.getText(), temp1);
                int b1 = 2;
                countAllWinners(bb1, b1);
                ma2.setText(countHighWinners(ma2.getText(),bb1));
                ////////////////////
                int cc1 = compareStr(lotto3.getText(), temp1);
                int c1 = 3;
                countAllWinners(cc1, c1);
                ma3.setText(countHighWinners(ma3.getText(),cc1));
                ////////////////////
                int dd1 = compareStr(lotto4.getText(), temp1);
                 int d1 = 4;
                countAllWinners(dd1, d1);
                ma4.setText(countHighWinners(ma4.getText(),dd1));
                ///////////////////
                int ee1 = compareStr(lotto5.getText(), temp1);
                int e1 = 5;
                countAllWinners(ee1, e1);
                ma5.setText(countHighWinners(ma5.getText(),ee1));
                ///////////////////
                int ff1 = compareStr(lotto6.getText(), temp1);
                int f1 = 6;
                countAllWinners(ff1, f1);
                ma6.setText(countHighWinners(ma6.getText(),ff1));
                ///////////////////
                int hh1 = compareStr(lotto7.getText(), temp1);
                int h1 = 7;
                countAllWinners(hh1, h1);
                ma7.setText(countHighWinners(ma7.getText(),hh1));
                ///////////////////
                int ii1 = compareStr(lotto8.getText(), temp1);
                int i1 = 8;
                countAllWinners(ii1, i1);
                ma8.setText(countHighWinners(ma8.getText(),ii1));
                ///////////////////
                int jj1 = compareStr(lotto9.getText(), temp1);
                int j1 = 9;
                countAllWinners(jj1, j1);
                ma9.setText(countHighWinners(ma9.getText(),jj1));
                ///////////////////
                int kk1 = compareStr(lotto10.getText(), temp1);
                int k1 = 10;
                countAllWinners(kk1, k1);
                ma10.setText(countHighWinners(ma10.getText(),kk1));
                ///////////////////
            }
            //sleepMS(1000);
        }
        loopCounter.setText(Integer.toString(fineLoopCounter));
        System.out.print("\nEnd of loop\n");
        //loopStatus.setText(String.valueOf(loopEnded));
    }//GEN-LAST:event_loopButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        setUpWOClear();
        //loopStatus.setText(loopStatusInit);
        ballsDrawn.setText("");
        clrLoop();
        clrMatchLabels();
        loopCounter.setText("0");
        fineLoopCounter = 0;
        sixWinners.setText("0");
        sixCount = 0;
    }//GEN-LAST:event_clearButtonActionPerformed

    private void genNumsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genNumsButtonActionPerformed
        if(startCounter==0){
            setUpRoutine();
            startCounter = 1;
        }
        checkBeforeClear();
        String  a=lotto1.getText(), 
                b=lotto2.getText(), 
                c=lotto3.getText(), 
                d=lotto4.getText(), 
                e=lotto5.getText(), 
                f=lotto6.getText(), 
                h=lotto7.getText(), 
                ii=lotto8.getText(), 
                jj=lotto9.getText(), 
                kk=lotto10.getText();
        ///// Populate the JTextFields with lotto numbers if they are not saved /////
        int g = Integer.parseInt(drawNum.getText());
        switch (g) 
        {
        case 1: 
            if (!saveFlag1) {
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            break; 
        case 2:
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            break;
        case 3: 
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto3.setText(c);
            break;
        case 4: 
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn3.setText(Integer.toString(vlcntrTemp));
            }
            lotto3.setText(c);
            if (!saveFlag4){
                d = lGenRand();
                mcn4.setText(Integer.toString(vlcntrTemp));
            }
            lotto4.setText(d);
            break;
        case 5: 
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn3.setText(Integer.toString(vlcntrTemp));
            }
            lotto3.setText(c);
            if (!saveFlag4){
                d = lGenRand();
                mcn4.setText(Integer.toString(vlcntrTemp));
            }
            lotto4.setText(d);
            if (!saveFlag5){
                e = lGenRand();
                mcn5.setText(Integer.toString(vlcntrTemp));
            }
            lotto5.setText(e);
            break;
        case 6: 
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn3.setText(Integer.toString(vlcntrTemp));
            }
            lotto3.setText(c);
            if (!saveFlag4){
                d = lGenRand();
                mcn4.setText(Integer.toString(vlcntrTemp));
            }
            lotto4.setText(d);
            if (!saveFlag5){
                e = lGenRand();
                mcn5.setText(Integer.toString(vlcntrTemp));
            }
            lotto5.setText(e);
            if (!saveFlag6){
                f = lGenRand();
                mcn6.setText(Integer.toString(vlcntrTemp));
            }
            lotto6.setText(f);
            break;
        case 7:
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn3.setText(Integer.toString(vlcntrTemp));
            }
            lotto3.setText(c);
            if (!saveFlag4){
                d = lGenRand();
                mcn4.setText(Integer.toString(vlcntrTemp));
            }
            lotto4.setText(d);
            if (!saveFlag5){
                e = lGenRand();
                mcn5.setText(Integer.toString(vlcntrTemp));
            }
            lotto5.setText(e);
            if (!saveFlag6){
                f = lGenRand();
                mcn6.setText(Integer.toString(vlcntrTemp));
            }
            lotto6.setText(f);
            if (!saveFlag7){
                h = lGenRand();
                mcn7.setText(Integer.toString(vlcntrTemp));
            }
            lotto7.setText(h);
            break;
        case 8:
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }  
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn3.setText(Integer.toString(vlcntrTemp));
            }  
            lotto3.setText(c);
            if (!saveFlag4){
                d = lGenRand();
                mcn4.setText(Integer.toString(vlcntrTemp));
            }   
            lotto4.setText(d);
            if (!saveFlag5){
                e = lGenRand();
                mcn5.setText(Integer.toString(vlcntrTemp));
            }   
            lotto5.setText(e);
            if (!saveFlag6){
                f = lGenRand();
                mcn6.setText(Integer.toString(vlcntrTemp));
            }    
            lotto6.setText(f);
            if (!saveFlag7){
                h = lGenRand();
                mcn7.setText(Integer.toString(vlcntrTemp));
            }    
            lotto7.setText(h);
            if (!saveFlag8){
                ii = lGenRand();
                mcn8.setText(Integer.toString(vlcntrTemp));
            }   
            lotto8.setText(ii);
            break;
        case 9:
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn3.setText(Integer.toString(vlcntrTemp));
            }
            lotto3.setText(c);
            if (!saveFlag4){
                d = lGenRand();
                mcn4.setText(Integer.toString(vlcntrTemp));
            }
            lotto4.setText(d);
            if (!saveFlag5){
                e = lGenRand();
                mcn5.setText(Integer.toString(vlcntrTemp));
            }
            lotto5.setText(e);
            if (!saveFlag6){
                f = lGenRand();
                mcn6.setText(Integer.toString(vlcntrTemp));
            }
            lotto6.setText(f);
            if (!saveFlag7){
                h = lGenRand();
                mcn7.setText(Integer.toString(vlcntrTemp));
            }
            lotto7.setText(h);
            if (!saveFlag8){
                ii = lGenRand();
                mcn8.setText(Integer.toString(vlcntrTemp));
            }
            lotto8.setText(ii);
            if (!saveFlag9){
                jj = lGenRand();
                mcn9.setText(Integer.toString(vlcntrTemp));
             }
            lotto9.setText(jj);
            break;
        case 10:
            if (!saveFlag1){
                a = lGenRand();
                mcn1.setText(Integer.toString(vlcntrTemp));
            }
            lotto1.setText(a);
            if (!saveFlag2){
                b = lGenRand();
                mcn2.setText(Integer.toString(vlcntrTemp));
            }
            lotto2.setText(b);
            if (!saveFlag3){
                c = lGenRand();
                mcn3.setText(Integer.toString(vlcntrTemp));
            }
            lotto3.setText(c);
            if (!saveFlag4){
                d = lGenRand();
                mcn4.setText(Integer.toString(vlcntrTemp));
            }
            lotto4.setText(d);
            if (!saveFlag5){
                e = lGenRand();
                mcn5.setText(Integer.toString(vlcntrTemp));
            }
            lotto5.setText(e);
            if (!saveFlag6){
                f = lGenRand();
                mcn6.setText(Integer.toString(vlcntrTemp));
            }
            lotto6.setText(f);
            if (!saveFlag7){
                h = lGenRand();
                mcn7.setText(Integer.toString(vlcntrTemp));
            }
            lotto7.setText(h);
            if (!saveFlag8){
                ii = lGenRand();
                mcn8.setText(Integer.toString(vlcntrTemp));
            }
            lotto8.setText(ii);
            if (!saveFlag9){
                jj = lGenRand();
                mcn9.setText(Integer.toString(vlcntrTemp));
            }
            lotto9.setText(jj);
            if (!saveFlag10){
                kk = lGenRand();
                mcn10.setText(Integer.toString(vlcntrTemp));
            }
            lotto10.setText(kk);
            break;
        default: {break;}
        
        }
    }//GEN-LAST:event_genNumsButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lGenGUI03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lGenGUI03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lGenGUI03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lGenGUI03.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lGenGUI03().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ballsDrawn;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField drawNum;
    private javax.swing.JLabel drawNumLabel;
    private javax.swing.JButton genNumsButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loopButton;
    private javax.swing.JLabel loopCounter;
    private javax.swing.JLabel loopCounterLabel;
    private javax.swing.JLabel loopMultLabel;
    private javax.swing.JTextField loopMultiplier;
    private javax.swing.JTextField lotto1;
    private javax.swing.JTextField lotto10;
    private javax.swing.JTextField lotto2;
    private javax.swing.JTextField lotto3;
    private javax.swing.JTextField lotto4;
    private javax.swing.JTextField lotto5;
    private javax.swing.JTextField lotto6;
    private javax.swing.JTextField lotto7;
    private javax.swing.JTextField lotto8;
    private javax.swing.JTextField lotto9;
    private javax.swing.JLabel lottoLabel;
    private javax.swing.JLabel ma1;
    private javax.swing.JLabel ma10;
    private javax.swing.JLabel ma2;
    private javax.swing.JLabel ma3;
    private javax.swing.JLabel ma4;
    private javax.swing.JLabel ma5;
    private javax.swing.JLabel ma6;
    private javax.swing.JLabel ma7;
    private javax.swing.JLabel ma8;
    private javax.swing.JLabel ma9;
    private javax.swing.JLabel mcn1;
    private javax.swing.JLabel mcn10;
    private javax.swing.JLabel mcn2;
    private javax.swing.JLabel mcn3;
    private javax.swing.JLabel mcn4;
    private javax.swing.JLabel mcn5;
    private javax.swing.JLabel mcn6;
    private javax.swing.JLabel mcn7;
    private javax.swing.JLabel mcn8;
    private javax.swing.JLabel mcn9;
    private javax.swing.ButtonGroup mcnButtonGroup;
    private javax.swing.JRadioButton mcnHigh;
    private javax.swing.JRadioButton mcnLow;
    private javax.swing.JRadioButton mcnMed;
    private javax.swing.JTextField mcnNum;
    private javax.swing.JLabel mcnNumLabel;
    private javax.swing.JTextField numLoopMCN;
    private javax.swing.JLabel numLoopMCNLabel;
    private javax.swing.JTextField numTestLoops;
    private javax.swing.JButton resetButton;
    private javax.swing.JRadioButton save1;
    private javax.swing.JRadioButton save10;
    private javax.swing.JRadioButton save2;
    private javax.swing.JRadioButton save3;
    private javax.swing.JRadioButton save4;
    private javax.swing.JRadioButton save5;
    private javax.swing.JRadioButton save6;
    private javax.swing.JRadioButton save7;
    private javax.swing.JRadioButton save8;
    private javax.swing.JRadioButton save9;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel sixWinners;
    private javax.swing.JLabel sixWinnersLabel;
    private javax.swing.JLabel testLoopLabel;
    private javax.swing.JLabel winLoop1;
    private javax.swing.JLabel winLoop10;
    private javax.swing.JLabel winLoop2;
    private javax.swing.JLabel winLoop3;
    private javax.swing.JLabel winLoop4;
    private javax.swing.JLabel winLoop5;
    private javax.swing.JLabel winLoop6;
    private javax.swing.JLabel winLoop7;
    private javax.swing.JLabel winLoop8;
    private javax.swing.JLabel winLoop9;
    // End of variables declaration//GEN-END:variables
}
